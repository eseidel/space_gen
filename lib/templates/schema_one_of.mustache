{{#description}}
/// {{{ description }}}
{{/description}}
sealed class {{ typeName }} {
    static {{ typeName }} fromJson(dynamic jsonArg) {
        // Determine which schema to use based on the json.
        // TODO(eseidel): Implement this.
        throw UnimplementedError('{{ typeName }}.fromJson');
    }

    /// Convenience to create a nullable type from a nullable json object.
    /// Useful when parsing optional fields.
    static {{ nullableTypeName }} maybeFromJson(dynamic json) {
        if (json == null) {
            return null;
        }
        return {{ typeName }}.fromJson(json);
    }

    /// Require all subclasses to implement toJson.
    dynamic toJson();
}
