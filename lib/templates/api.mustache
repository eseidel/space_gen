{{#api_description}}
/// {{{ . }}}
{{/api_description}}
class {{ className }} {
    {{ className }}(ApiClient? client) : client = client ?? ApiClient();

    final ApiClient client;

    {{#endpoints}}
    {{#endpoint_summary}}
    /// {{{ . }}}
    {{/endpoint_summary}}
    {{#endpoint_description}}
    /// {{{ . }}}
    {{/endpoint_description}}
    Future<{{{ returnType }}}> {{{ methodName }}}(
        {{#positionalParameters}}
        {{{ type }}} {{{ dartName }}},
        {{/positionalParameters}}
        {{#hasNamedParameters}}
        { {{#namedParameters}}{{#required}}required {{{ type }}}{{/required}}{{^required}}{{{ nullableType }}}{{/required}} {{{ dartName }}}{{#hasDefaultValue}} = {{{ defaultValue }}}{{/hasDefaultValue}},{{/namedParameters}} }
        {{/hasNamedParameters}}
    ) async {
        final response = await client.invokeApi(
            method: Method.{{{httpMethod}}},
            path: '{{{path}}}'
            {{#pathParameters}}
            .replaceAll('{{{ bracketedName }}}', "${ {{{ toJson }}} }")
            {{/pathParameters}},
            {{#hasQueryParameters}}
            queryParameters: {
                {{#queryParameters}}
                '{{{ name }}}': {{#isNullable}}?{{/isNullable}}{{{ toJson }}}.toString(),
                {{/queryParameters}}
            },
            {{/hasQueryParameters}}
            {{#requestBody}}
            body: {{{ encodedBody }}},
            {{/requestBody}}
            {{#hasHeaderParameters}}
            headerParameters: {
                {{#headerParameters}}
                '{{{ name }}}': {{#isNullable}}?{{/isNullable}}{{{ toJson }}},
                {{/headerParameters}}
            },
            {{/hasHeaderParameters}}
        );

        if (response.statusCode >= HttpStatus.badRequest) {
            throw ApiException(response.statusCode, response.body.toString());
        }

        if (response.body.isNotEmpty) {
            return {{{ responseFromJson }}};
        }

        throw ApiException(response.statusCode, 'Unhandled response from ${{{methodName}}}');
    }
    {{/endpoints}}
}
